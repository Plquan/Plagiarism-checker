<!-- views/index.ejs -->
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            color: #212529;
            padding-bottom: 50px;
        }
        
        .header {
            background-color: #3b5998;
            color: white;
            padding: 20px 0;
            margin-bottom: 30px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }
        
        .container {
            max-width: 1000px;
        }
        
        .card {
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 25px;
            border: none;
            transition: transform 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
        }
        
        .card-header {
            background-color: #4267B2;
            color: white;
            border-radius: 10px 10px 0 0 !important;
            font-weight: 600;
            padding: 15px 20px;
        }
        
        .form-control {
            border-radius: 5px;
            padding: 10px 15px;
            border: 1px solid #ced4da;
        }
        
        .btn-primary {
            background-color: #4267B2;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            font-weight: 600;
            transition: background-color 0.3s ease;
        }
        
        .btn-primary:hover {
            background-color: #365899;
        }
        
        .list-group-item {
            border-left: none;
            border-right: none;
            padding: 15px 20px;
        }
        
        .progress {
            height: 10px;
            border-radius: 5px;
        }
        
        .url-input-group {
            margin-bottom: 10px;
        }
        
        .result-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            border-bottom: 1px solid #e9ecef;
            padding-bottom: 15px;
        }
        
        .result-item:last-child {
            border-bottom: none;
            margin-bottom: 0;
        }
        
        .score-badge {
            font-size: 14px;
            padding: 5px 10px;
            border-radius: 20px;
        }
        
        .loader {
            display: none;
            text-align: center;
            padding: 20px;
        }
        
        .spinner-border {
            width: 3rem;
            height: 3rem;
        }
        
        .tab-content {
            padding: 20px;
        }
        
        #urlList {
            max-height: 200px;
            overflow-y: auto;
        }
        
        .url-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 15px;
            background-color: #f8f9fa;
            border-radius: 5px;
            margin-bottom: 10px;
        }
        
        .url-text {
            flex-grow: 1;
            margin-right: 10px;
            word-break: break-all;
        }
        
        .remove-url {
            color: #dc3545;
            cursor: pointer;
        }
        
        .nav-tabs .nav-link {
            color: #495057;
            font-weight: 500;
        }
        
        .nav-tabs .nav-link.active {
            color: #4267B2;
            font-weight: 600;
        }
        
        .alert-score {
            font-size: 24px;
            font-weight: bold;
            text-align: center;
            margin: 20px 0;
        }
        
        .score-summary {
            text-align: center;
            margin-bottom: 20px;
        }
        
        #resultAccordion .accordion-button:not(.collapsed) {
            background-color: #e7f1ff;
            color: #4267B2;
        }
        
        #resultAccordion .accordion-button:focus {
            box-shadow: none;
        }
        
        .source-url {
            word-break: break-all;
        }
        
        .feature-icon {
            font-size: 2rem;
            color: #4267B2;
            margin-bottom: 15px;
        }
        
        /* Thêm style cho link có thể click */
        .source-url a {
            color: #4267B2;
            text-decoration: none;
            transition: color 0.3s ease;
        }
        
        .source-url a:hover {
            color: #365899;
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-auto">
                    <i class="fas fa-search-plus fa-2x"></i>
                </div>
                <div class="col">
                    <h1 class="mb-0">Kiểm Tra Đạo Văn Trực Tuyến</h1>
                    <p class="mb-0">Công cụ kiểm tra đạo văn so sánh với dữ liệu từ Internet</p>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Features Section -->
        <div class="card">
            <div class="card-header">
                <ul class="nav nav-tabs card-header-tabs" id="myTab" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="file-tab" data-bs-toggle="tab" data-bs-target="#file-pane" type="button" role="tab" aria-controls="file-pane" aria-selected="true">
                            <i class="fas fa-file-upload me-2"></i>Tải lên tài liệu
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="text-tab" data-bs-toggle="tab" data-bs-target="#text-pane" type="button" role="tab" aria-controls="text-pane" aria-selected="false">
                            <i class="fas fa-keyboard me-2"></i>Nhập văn bản
                        </button>
                    </li>
                </ul>
            </div>
            
            <div class="tab-content" id="myTabContent">
                <!-- File Upload Tab -->
                <div class="tab-pane fade show active" id="file-pane" role="tabpanel" aria-labelledby="file-tab">
                    <form id="fileUploadForm" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label for="fileInput" class="form-label">Tải lên tài liệu (Chỉ chấp nhận file .docx)</label>
                            <input type="file" class="form-control" id="fileInput" name="file" accept=".docx" required>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Nguồn kiểm tra (Thêm các URL để kiểm tra đạo văn)</label>
                            <div class="input-group mb-3">
                                <input type="text" class="form-control" id="urlInput" placeholder="https://example.com">
                                <button class="btn btn-outline-secondary" type="button" id="addUrlBtn">
                                    <i class="fas fa-plus"></i> Thêm
                                </button>
                            </div>
                            <div id="urlList" class="mt-2"></div>
                        </div>
                        
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-search-plus me-2"></i>Kiểm tra đạo văn
                        </button>
                    </form>
                </div>
                
                <!-- Text Input Tab -->
                <div class="tab-pane fade" id="text-pane" role="tabpanel" aria-labelledby="text-tab">
                    <form id="textCheckForm">
                        <div class="mb-3">
                            <label for="textInput" class="form-label">Nhập văn bản cần kiểm tra</label>
                            <textarea class="form-control" id="textInput" rows="6" required placeholder="Dán văn bản cần kiểm tra vào đây..."></textarea>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Nguồn kiểm tra (Thêm các URL để kiểm tra đạo văn)</label>
                            <div class="input-group mb-3">
                                <input type="text" class="form-control" id="textUrlInput" placeholder="https://example.com">
                                <button class="btn btn-outline-secondary" type="button" id="addTextUrlBtn">
                                    <i class="fas fa-plus"></i> Thêm
                                </button>
                            </div>
                            <div id="textUrlList" class="mt-2"></div>
                        </div>
                        
                        <button type="submit" class="btn btn-primary w-100">
                            <i class="fas fa-search-plus me-2"></i>Kiểm tra đạo văn
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Loading Indicator -->
        <div id="loader" class="loader">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Đang kiểm tra...</span>
            </div>
            <p class="mt-3">Đang kiểm tra đạo văn, vui lòng đợi...</p>
        </div>

        <!-- Results Section -->
        <div id="resultsSection" style="display: none;">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">Kết quả kiểm tra đạo văn</h5>
                </div>
                <div class="card-body">
                    <div id="scoreSummary" class="score-summary">
                        <h4>Tỷ lệ đạo văn trung bình:</h4>
                        <div id="avgScoreDisplay" class="alert-score">0%</div>
                    </div>

                    <div class="accordion" id="resultAccordion">
                        <!-- Results will be added here -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const fileUploadForm = document.getElementById('fileUploadForm');
            const textCheckForm = document.getElementById('textCheckForm');
            const urlInput = document.getElementById('urlInput');
            const textUrlInput = document.getElementById('textUrlInput');
            const addUrlBtn = document.getElementById('addUrlBtn');
            const addTextUrlBtn = document.getElementById('addTextUrlBtn');
            const urlList = document.getElementById('urlList');
            const textUrlList = document.getElementById('textUrlList');
            const resultsSection = document.getElementById('resultsSection');
            const resultAccordion = document.getElementById('resultAccordion');
            const loader = document.getElementById('loader');
            const avgScoreDisplay = document.getElementById('avgScoreDisplay');
            
            // Default URLs
            const defaultUrls = [
                'https://vi.wikipedia.org/wiki/Trang_Chính',
                'https://vnexpress.net/',
                'https://dantri.com.vn/'
            ];
            
            // Add default URLs
            defaultUrls.forEach(url => {
                addUrlToList(url, urlList);
                addUrlToList(url, textUrlList);
            });
            
            // Add URL buttons
            addUrlBtn.addEventListener('click', function() {
                const url = urlInput.value.trim();
                if (isValidUrl(url)) {
                    addUrlToList(url, urlList);
                    urlInput.value = '';
                } else {
                    alert('Vui lòng nhập URL hợp lệ!');
                }
            });
            
            addTextUrlBtn.addEventListener('click', function() {
                const url = textUrlInput.value.trim();
                if (isValidUrl(url)) {
                    addUrlToList(url, textUrlList);
                    textUrlInput.value = '';
                } else {
                    alert('Vui lòng nhập URL hợp lệ!');
                }
            });
            
            // File upload form submission
            fileUploadForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const fileInput = document.getElementById('fileInput');
                if (!fileInput.files.length) {
                    alert('Vui lòng chọn file để kiểm tra!');
                    return;
                }
                
                const formData = new FormData();
                formData.append('file', fileInput.files[0]);
                
                // Collect URLs from the list
                const urls = [];
                document.querySelectorAll('#urlList .url-text').forEach(item => {
                    urls.push(item.textContent);
                });
                
                urls.forEach(url => {
                      formData.append('urls', url);
                  });
                
                // Show loading indicator
                loader.style.display = 'block';
                resultsSection.style.display = 'none';
                
                // Send request to the server
                fetch('/check_plagiarism', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    displayResults(data);
                })
                .catch(error => {
                    alert('Đã xảy ra lỗi: ' + error);
                    console.error('Error:', error);
                })
                .finally(() => {
                    loader.style.display = 'none';
                });
            });
            
            // Text input form submission
            textCheckForm.addEventListener('submit', function(e) {
                e.preventDefault();
                
                const textInput = document.getElementById('textInput');
                const text = textInput.value.trim();
                
                if (!text) {
                    alert('Vui lòng nhập văn bản để kiểm tra!');
                    return;
                }
                
                // Collect URLs from the list
                const urls = [];
                document.querySelectorAll('#textUrlList .url-text').forEach(item => {
                    urls.push(item.textContent);
                });
                
                if (urls.length === 0) {
                    alert('Vui lòng thêm ít nhất một URL để kiểm tra!');
                    return;
                }
                
                // Show loading indicator
                loader.style.display = 'block';
                resultsSection.style.display = 'none';
                
                // Send request to the server
                fetch('/check_custom_urls', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ text, urls })
                })
                .then(response => response.json())
                .then(data => {
                    displayResults(data);
                })
                .catch(error => {
                    alert('Đã xảy ra lỗi: ' + error);
                    console.error('Error:', error);
                })
                .finally(() => {
                    loader.style.display = 'none';
                });
            });
            
            function isValidUrl(string) {
                try {
                    new URL(string);
                    return true;
                } catch (_) {
                    return false;
                }
            }
            
            function addUrlToList(url, listElement) {
                const urlItem = document.createElement('div');
                urlItem.className = 'url-item';
                
                const urlText = document.createElement('div');
                urlText.className = 'url-text';
                urlText.textContent = url;
                
                // Thêm tính năng click để mở URL trong tab mới
                urlText.style.cursor = 'pointer';
                urlText.style.color = '#4267B2';
                urlText.title = 'Click để truy cập trang web';
                
                urlText.addEventListener('click', function() {
                    window.open(url, '_blank');
                });
                
                const removeBtn = document.createElement('span');
                removeBtn.className = 'remove-url';
                removeBtn.innerHTML = '<i class="fas fa-times"></i>';
                removeBtn.addEventListener('click', function() {
                    urlItem.remove();
                });
                
                urlItem.appendChild(urlText);
                urlItem.appendChild(removeBtn);
                listElement.appendChild(urlItem);
                
                // Thêm hiệu ứng hover
                urlText.addEventListener('mouseover', function() {
                    this.style.textDecoration = 'underline';
                });
                
                urlText.addEventListener('mouseout', function() {
                    this.style.textDecoration = 'none';
                });
            }
            
            function getScoreColor(score) {
                if (score < 0.2) return 'success';
                if (score < 0.4) return 'info';
                if (score < 0.6) return 'warning';
                return 'danger';
            }
            
            function getScoreText(score) {
                if (score < 0.2) return 'Rất thấp';
                if (score < 0.4) return 'Thấp';
                if (score < 0.6) return 'Trung bình';
                if (score < 0.8) return 'Cao';
                return 'Rất cao';
            }
            
            function displayResults(data) {
                resultsSection.style.display = 'block';
                resultAccordion.innerHTML = '';
                
                if (!data.results || data.results.length === 0) {
                    resultAccordion.innerHTML = '<div class="alert alert-info">Không có kết quả nào được tìm thấy.</div>';
                    return;
                }
                
                // Calculate average score
                let totalScore = 0;
                data.results.forEach(result => {
                    totalScore += result.plagiarism_score;
                });
                const averageScore = totalScore / data.results.length;
                avgScoreDisplay.textContent = `${(averageScore * 100).toFixed(2)}%`;
                avgScoreDisplay.className = `alert-score text-${getScoreColor(averageScore)}`;
                
                // Add individual results
                data.results.forEach((result, index) => {
                    const score = result.plagiarism_score;
                    const scorePercent = (score * 100).toFixed(2);
                    const source = result.source || result.document;
                    const scoreColor = getScoreColor(score);
                    const scoreLevel = getScoreText(score);
                    
                    const accordionItem = document.createElement('div');
                    accordionItem.className = 'accordion-item';
                    accordionItem.innerHTML = `
                        <h2 class="accordion-header">
                            <button class="accordion-button ${index !== 0 ? 'collapsed' : ''}" type="button" data-bs-toggle="collapse"
                                data-bs-target="#collapse${index}" aria-expanded="${index === 0}" aria-controls="collapse${index}">
                                <div class="d-flex justify-content-between w-100 align-items-center">
                                    <span>Nguồn: ${source.substring(0, 50)}${source.length > 50 ? '...' : ''}</span>
                                    <span class="badge bg-${scoreColor} ms-2">${scoreLevel}: ${scorePercent}%</span>
                                </div>
                            </button>
                        </h2>
                        <div id="collapse${index}" class="accordion-collapse collapse ${index === 0 ? 'show' : ''}" data-bs-parent="#resultAccordion">
                            <div class="accordion-body">
                                <div class="mb-3">
                                    <p class="source-url"><strong>URL nguồn:</strong> <a href="${source}" target="_blank" title="Mở trong tab mới">${source} <i class="fas fa-external-link-alt"></i></a></p>
                                </div>
                                <div class="mb-3">
                                    <strong>Mức độ trùng lặp:</strong>
                                    <div class="progress mt-2">
                                        <div class="progress-bar bg-${scoreColor}" role="progressbar" style="width: ${scorePercent}%"
                                            aria-valuenow="${scorePercent}" aria-valuemin="0" aria-valuemax="100">${scorePercent}%</div>
                                    </div>
                                </div>
                                <div class="mt-3">
                                    <p><strong>Đánh giá:</strong> ${getEvaluation(score)}</p>
                                </div>
                            </div>
                        </div>
                    `;
                    
                    resultAccordion.appendChild(accordionItem);
                });
            }
            
            function getEvaluation(score) {
                if (score < 0.2) {
                    return 'Văn bản có vẻ là nguyên bản. Mức độ trùng lặp với nguồn này rất thấp.';
                } else if (score < 0.4) {
                    return 'Có một số đoạn trùng lặp với nguồn này, nhưng phần lớn vẫn là nguyên bản.';
                } else if (score < 0.6) {
                    return 'Phát hiện mức độ trùng lặp trung bình. Nên xem xét lại và trích dẫn nguồn.';
                } else if (score < 0.8) {
                    return 'Mức độ trùng lặp khá cao với nguồn này. Cần phải trích dẫn nguồn hoặc viết lại.';
                } else {
                    return 'Mức độ trùng lặp rất cao! Văn bản này có thể là sao chép trực tiếp từ nguồn.';
                }
            }
        });
    </script>
</body>
</html>